#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CRUDRestaurante.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ProjetoCardapio")]
	public partial class CardapioDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertRestaurante(Restaurante instance);
    partial void UpdateRestaurante(Restaurante instance);
    partial void DeleteRestaurante(Restaurante instance);
    partial void InsertCardapio(Cardapio instance);
    partial void UpdateCardapio(Cardapio instance);
    partial void DeleteCardapio(Cardapio instance);
    partial void InsertProduto(Produto instance);
    partial void UpdateProduto(Produto instance);
    partial void DeleteProduto(Produto instance);
    partial void InsertFila(Fila instance);
    partial void UpdateFila(Fila instance);
    partial void DeleteFila(Fila instance);
    partial void InsertItemPedido(ItemPedido instance);
    partial void UpdateItemPedido(ItemPedido instance);
    partial void DeleteItemPedido(ItemPedido instance);
    partial void InsertPedido(Pedido instance);
    partial void UpdatePedido(Pedido instance);
    partial void DeletePedido(Pedido instance);
    partial void InsertMesa(Mesa instance);
    partial void UpdateMesa(Mesa instance);
    partial void DeleteMesa(Mesa instance);
    #endregion
		
		public CardapioDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ProjetoCardapioConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CardapioDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CardapioDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CardapioDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CardapioDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Restaurante> Restaurantes
		{
			get
			{
				return this.GetTable<Restaurante>();
			}
		}
		
		public System.Data.Linq.Table<Cardapio> Cardapios
		{
			get
			{
				return this.GetTable<Cardapio>();
			}
		}
		
		public System.Data.Linq.Table<Produto> Produtos
		{
			get
			{
				return this.GetTable<Produto>();
			}
		}
		
		public System.Data.Linq.Table<Fila> Filas
		{
			get
			{
				return this.GetTable<Fila>();
			}
		}
		
		public System.Data.Linq.Table<ItemPedido> ItemPedidos
		{
			get
			{
				return this.GetTable<ItemPedido>();
			}
		}
		
		public System.Data.Linq.Table<Pedido> Pedidos
		{
			get
			{
				return this.GetTable<Pedido>();
			}
		}
		
		public System.Data.Linq.Table<Mesa> Mesas
		{
			get
			{
				return this.GetTable<Mesa>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Restaurante")]
	public partial class Restaurante : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Descricao;
		
		private EntitySet<Cardapio> _Cardapios;
		
		private EntitySet<Mesa> _Mesas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    #endregion
		
		public Restaurante()
		{
			this._Cardapios = new EntitySet<Cardapio>(new Action<Cardapio>(this.attach_Cardapios), new Action<Cardapio>(this.detach_Cardapios));
			this._Mesas = new EntitySet<Mesa>(new Action<Mesa>(this.attach_Mesas), new Action<Mesa>(this.detach_Mesas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="VarChar(50)")]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Restaurante_Cardapio", Storage="_Cardapios", ThisKey="Id", OtherKey="Restaurante_id")]
		internal EntitySet<Cardapio> Cardapios
		{
			get
			{
				return this._Cardapios;
			}
			set
			{
				this._Cardapios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Restaurante_Mesa", Storage="_Mesas", ThisKey="Id", OtherKey="Restaurante_Id")]
		internal EntitySet<Mesa> Mesas
		{
			get
			{
				return this._Mesas;
			}
			set
			{
				this._Mesas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cardapios(Cardapio entity)
		{
			this.SendPropertyChanging();
			entity.Restaurante = this;
		}
		
		private void detach_Cardapios(Cardapio entity)
		{
			this.SendPropertyChanging();
			entity.Restaurante = null;
		}
		
		private void attach_Mesas(Mesa entity)
		{
			this.SendPropertyChanging();
			entity.Restaurante = this;
		}
		
		private void detach_Mesas(Mesa entity)
		{
			this.SendPropertyChanging();
			entity.Restaurante = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cardapio")]
	public partial class Cardapio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Descricao;
		
		private System.Nullable<int> _Restaurante_id;
		
		private EntitySet<Produto> _Produtos;
		
		private EntitySet<Fila> _Filas;
		
		private EntityRef<Restaurante> _Restaurante;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    partial void OnRestaurante_idChanging(System.Nullable<int> value);
    partial void OnRestaurante_idChanged();
    #endregion
		
		public Cardapio()
		{
			this._Produtos = new EntitySet<Produto>(new Action<Produto>(this.attach_Produtos), new Action<Produto>(this.detach_Produtos));
			this._Filas = new EntitySet<Fila>(new Action<Fila>(this.attach_Filas), new Action<Fila>(this.detach_Filas));
			this._Restaurante = default(EntityRef<Restaurante>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="VarChar(50)")]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Restaurante_id", DbType="Int")]
		public System.Nullable<int> Restaurante_id
		{
			get
			{
				return this._Restaurante_id;
			}
			set
			{
				if ((this._Restaurante_id != value))
				{
					if (this._Restaurante.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRestaurante_idChanging(value);
					this.SendPropertyChanging();
					this._Restaurante_id = value;
					this.SendPropertyChanged("Restaurante_id");
					this.OnRestaurante_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cardapio_Produto", Storage="_Produtos", ThisKey="Id", OtherKey="Cardapio_id")]
		internal EntitySet<Produto> Produtos
		{
			get
			{
				return this._Produtos;
			}
			set
			{
				this._Produtos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cardapio_Fila", Storage="_Filas", ThisKey="Id", OtherKey="Cardapio_id")]
		internal EntitySet<Fila> Filas
		{
			get
			{
				return this._Filas;
			}
			set
			{
				this._Filas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Restaurante_Cardapio", Storage="_Restaurante", ThisKey="Restaurante_id", OtherKey="Id", IsForeignKey=true)]
		internal Restaurante Restaurante
		{
			get
			{
				return this._Restaurante.Entity;
			}
			set
			{
				Restaurante previousValue = this._Restaurante.Entity;
				if (((previousValue != value) 
							|| (this._Restaurante.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Restaurante.Entity = null;
						previousValue.Cardapios.Remove(this);
					}
					this._Restaurante.Entity = value;
					if ((value != null))
					{
						value.Cardapios.Add(this);
						this._Restaurante_id = value.Id;
					}
					else
					{
						this._Restaurante_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Restaurante");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Produtos(Produto entity)
		{
			this.SendPropertyChanging();
			entity.Cardapio = this;
		}
		
		private void detach_Produtos(Produto entity)
		{
			this.SendPropertyChanging();
			entity.Cardapio = null;
		}
		
		private void attach_Filas(Fila entity)
		{
			this.SendPropertyChanging();
			entity.Cardapio = this;
		}
		
		private void detach_Filas(Fila entity)
		{
			this.SendPropertyChanging();
			entity.Cardapio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Produto")]
	public partial class Produto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Descricao;
		
		private decimal _Preco;
		
		private string _Foto;
		
		private string _NomeDescricao;
		
		private int _Cardapio_id;
		
		private System.Nullable<int> _Fila_id;
		
		private EntitySet<ItemPedido> _ItemPedidos;
		
		private EntityRef<Cardapio> _Cardapio;
		
		private EntityRef<Fila> _Fila;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    partial void OnPrecoChanging(decimal value);
    partial void OnPrecoChanged();
    partial void OnFotoChanging(string value);
    partial void OnFotoChanged();
    partial void OnNomeDescricaoChanging(string value);
    partial void OnNomeDescricaoChanged();
    partial void OnCardapio_idChanging(int value);
    partial void OnCardapio_idChanged();
    partial void OnFila_idChanging(System.Nullable<int> value);
    partial void OnFila_idChanged();
    #endregion
		
		public Produto()
		{
			this._ItemPedidos = new EntitySet<ItemPedido>(new Action<ItemPedido>(this.attach_ItemPedidos), new Action<ItemPedido>(this.detach_ItemPedidos));
			this._Cardapio = default(EntityRef<Cardapio>);
			this._Fila = default(EntityRef<Fila>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="VarChar(200)")]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preco", DbType="Decimal(10,2) NOT NULL")]
		public decimal Preco
		{
			get
			{
				return this._Preco;
			}
			set
			{
				if ((this._Preco != value))
				{
					this.OnPrecoChanging(value);
					this.SendPropertyChanging();
					this._Preco = value;
					this.SendPropertyChanged("Preco");
					this.OnPrecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Foto", DbType="VarChar(255)")]
		public string Foto
		{
			get
			{
				return this._Foto;
			}
			set
			{
				if ((this._Foto != value))
				{
					this.OnFotoChanging(value);
					this.SendPropertyChanging();
					this._Foto = value;
					this.SendPropertyChanged("Foto");
					this.OnFotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeDescricao", DbType="VarChar(50)")]
		public string NomeDescricao
		{
			get
			{
				return this._NomeDescricao;
			}
			set
			{
				if ((this._NomeDescricao != value))
				{
					this.OnNomeDescricaoChanging(value);
					this.SendPropertyChanging();
					this._NomeDescricao = value;
					this.SendPropertyChanged("NomeDescricao");
					this.OnNomeDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cardapio_id", DbType="Int NOT NULL")]
		public int Cardapio_id
		{
			get
			{
				return this._Cardapio_id;
			}
			set
			{
				if ((this._Cardapio_id != value))
				{
					if (this._Cardapio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCardapio_idChanging(value);
					this.SendPropertyChanging();
					this._Cardapio_id = value;
					this.SendPropertyChanged("Cardapio_id");
					this.OnCardapio_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fila_id", DbType="Int")]
		public System.Nullable<int> Fila_id
		{
			get
			{
				return this._Fila_id;
			}
			set
			{
				if ((this._Fila_id != value))
				{
					if (this._Fila.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFila_idChanging(value);
					this.SendPropertyChanging();
					this._Fila_id = value;
					this.SendPropertyChanged("Fila_id");
					this.OnFila_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_ItemPedido", Storage="_ItemPedidos", ThisKey="Id", OtherKey="Produto_Id")]
		internal EntitySet<ItemPedido> ItemPedidos
		{
			get
			{
				return this._ItemPedidos;
			}
			set
			{
				this._ItemPedidos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cardapio_Produto", Storage="_Cardapio", ThisKey="Cardapio_id", OtherKey="Id", IsForeignKey=true)]
		internal Cardapio Cardapio
		{
			get
			{
				return this._Cardapio.Entity;
			}
			set
			{
				Cardapio previousValue = this._Cardapio.Entity;
				if (((previousValue != value) 
							|| (this._Cardapio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cardapio.Entity = null;
						previousValue.Produtos.Remove(this);
					}
					this._Cardapio.Entity = value;
					if ((value != null))
					{
						value.Produtos.Add(this);
						this._Cardapio_id = value.Id;
					}
					else
					{
						this._Cardapio_id = default(int);
					}
					this.SendPropertyChanged("Cardapio");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fila_Produto", Storage="_Fila", ThisKey="Fila_id", OtherKey="Id", IsForeignKey=true)]
		internal Fila Fila
		{
			get
			{
				return this._Fila.Entity;
			}
			set
			{
				Fila previousValue = this._Fila.Entity;
				if (((previousValue != value) 
							|| (this._Fila.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fila.Entity = null;
						previousValue.Produtos.Remove(this);
					}
					this._Fila.Entity = value;
					if ((value != null))
					{
						value.Produtos.Add(this);
						this._Fila_id = value.Id;
					}
					else
					{
						this._Fila_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Fila");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemPedidos(ItemPedido entity)
		{
			this.SendPropertyChanging();
			entity.Produto = this;
		}
		
		private void detach_ItemPedidos(ItemPedido entity)
		{
			this.SendPropertyChanging();
			entity.Produto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fila")]
	public partial class Fila : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Cardapio_id;
		
		private string _Descricao;
		
		private EntitySet<Produto> _Produtos;
		
		private EntityRef<Cardapio> _Cardapio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCardapio_idChanging(System.Nullable<int> value);
    partial void OnCardapio_idChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    #endregion
		
		public Fila()
		{
			this._Produtos = new EntitySet<Produto>(new Action<Produto>(this.attach_Produtos), new Action<Produto>(this.detach_Produtos));
			this._Cardapio = default(EntityRef<Cardapio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cardapio_id", DbType="Int")]
		public System.Nullable<int> Cardapio_id
		{
			get
			{
				return this._Cardapio_id;
			}
			set
			{
				if ((this._Cardapio_id != value))
				{
					if (this._Cardapio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCardapio_idChanging(value);
					this.SendPropertyChanging();
					this._Cardapio_id = value;
					this.SendPropertyChanged("Cardapio_id");
					this.OnCardapio_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="VarChar(50)")]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fila_Produto", Storage="_Produtos", ThisKey="Id", OtherKey="Fila_id")]
		internal EntitySet<Produto> Produtos
		{
			get
			{
				return this._Produtos;
			}
			set
			{
				this._Produtos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cardapio_Fila", Storage="_Cardapio", ThisKey="Cardapio_id", OtherKey="Id", IsForeignKey=true)]
		internal Cardapio Cardapio
		{
			get
			{
				return this._Cardapio.Entity;
			}
			set
			{
				Cardapio previousValue = this._Cardapio.Entity;
				if (((previousValue != value) 
							|| (this._Cardapio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cardapio.Entity = null;
						previousValue.Filas.Remove(this);
					}
					this._Cardapio.Entity = value;
					if ((value != null))
					{
						value.Filas.Add(this);
						this._Cardapio_id = value.Id;
					}
					else
					{
						this._Cardapio_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cardapio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Produtos(Produto entity)
		{
			this.SendPropertyChanging();
			entity.Fila = this;
		}
		
		private void detach_Produtos(Produto entity)
		{
			this.SendPropertyChanging();
			entity.Fila = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemPedido")]
	public partial class ItemPedido : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Quantidade;
		
		private System.Nullable<System.TimeSpan> _Hora;
		
		private int _Situacao;
		
		private int _Produto_Id;
		
		private System.Nullable<int> _Pedido_Id;
		
		private EntityRef<Produto> _Produto;
		
		private EntityRef<Pedido> _Pedido;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnQuantidadeChanging(int value);
    partial void OnQuantidadeChanged();
    partial void OnHoraChanging(System.Nullable<System.TimeSpan> value);
    partial void OnHoraChanged();
    partial void OnSituacaoChanging(int value);
    partial void OnSituacaoChanged();
    partial void OnProduto_IdChanging(int value);
    partial void OnProduto_IdChanged();
    partial void OnPedido_IdChanging(System.Nullable<int> value);
    partial void OnPedido_IdChanged();
    #endregion
		
		public ItemPedido()
		{
			this._Produto = default(EntityRef<Produto>);
			this._Pedido = default(EntityRef<Pedido>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantidade", DbType="Int NOT NULL")]
		public int Quantidade
		{
			get
			{
				return this._Quantidade;
			}
			set
			{
				if ((this._Quantidade != value))
				{
					this.OnQuantidadeChanging(value);
					this.SendPropertyChanging();
					this._Quantidade = value;
					this.SendPropertyChanged("Quantidade");
					this.OnQuantidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hora", DbType="Time")]
		public System.Nullable<System.TimeSpan> Hora
		{
			get
			{
				return this._Hora;
			}
			set
			{
				if ((this._Hora != value))
				{
					this.OnHoraChanging(value);
					this.SendPropertyChanging();
					this._Hora = value;
					this.SendPropertyChanged("Hora");
					this.OnHoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Situacao", DbType="Int NOT NULL")]
		public int Situacao
		{
			get
			{
				return this._Situacao;
			}
			set
			{
				if ((this._Situacao != value))
				{
					this.OnSituacaoChanging(value);
					this.SendPropertyChanging();
					this._Situacao = value;
					this.SendPropertyChanged("Situacao");
					this.OnSituacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Produto_Id", DbType="Int NOT NULL")]
		public int Produto_Id
		{
			get
			{
				return this._Produto_Id;
			}
			set
			{
				if ((this._Produto_Id != value))
				{
					if (this._Produto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduto_IdChanging(value);
					this.SendPropertyChanging();
					this._Produto_Id = value;
					this.SendPropertyChanged("Produto_Id");
					this.OnProduto_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pedido_Id", DbType="Int")]
		public System.Nullable<int> Pedido_Id
		{
			get
			{
				return this._Pedido_Id;
			}
			set
			{
				if ((this._Pedido_Id != value))
				{
					if (this._Pedido.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPedido_IdChanging(value);
					this.SendPropertyChanging();
					this._Pedido_Id = value;
					this.SendPropertyChanged("Pedido_Id");
					this.OnPedido_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_ItemPedido", Storage="_Produto", ThisKey="Produto_Id", OtherKey="Id", IsForeignKey=true)]
		internal Produto Produto
		{
			get
			{
				return this._Produto.Entity;
			}
			set
			{
				Produto previousValue = this._Produto.Entity;
				if (((previousValue != value) 
							|| (this._Produto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produto.Entity = null;
						previousValue.ItemPedidos.Remove(this);
					}
					this._Produto.Entity = value;
					if ((value != null))
					{
						value.ItemPedidos.Add(this);
						this._Produto_Id = value.Id;
					}
					else
					{
						this._Produto_Id = default(int);
					}
					this.SendPropertyChanged("Produto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pedido_ItemPedido", Storage="_Pedido", ThisKey="Pedido_Id", OtherKey="Id", IsForeignKey=true)]
		internal Pedido Pedido
		{
			get
			{
				return this._Pedido.Entity;
			}
			set
			{
				Pedido previousValue = this._Pedido.Entity;
				if (((previousValue != value) 
							|| (this._Pedido.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pedido.Entity = null;
						previousValue.ItemPedidos.Remove(this);
					}
					this._Pedido.Entity = value;
					if ((value != null))
					{
						value.ItemPedidos.Add(this);
						this._Pedido_Id = value.Id;
					}
					else
					{
						this._Pedido_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Pedido");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pedido")]
	public partial class Pedido : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<decimal> _ValorTotal;
		
		private System.Nullable<System.DateTime> _Data;
		
		private System.Nullable<int> _Cliente;
		
		private System.Nullable<int> _Mesa_Id;
		
		private EntitySet<ItemPedido> _ItemPedidos;
		
		private EntityRef<Mesa> _Mesa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnValorTotalChanging(System.Nullable<decimal> value);
    partial void OnValorTotalChanged();
    partial void OnDataChanging(System.Nullable<System.DateTime> value);
    partial void OnDataChanged();
    partial void OnClienteChanging(System.Nullable<int> value);
    partial void OnClienteChanged();
    partial void OnMesa_IdChanging(System.Nullable<int> value);
    partial void OnMesa_IdChanged();
    #endregion
		
		public Pedido()
		{
			this._ItemPedidos = new EntitySet<ItemPedido>(new Action<ItemPedido>(this.attach_ItemPedidos), new Action<ItemPedido>(this.detach_ItemPedidos));
			this._Mesa = default(EntityRef<Mesa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValorTotal", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ValorTotal
		{
			get
			{
				return this._ValorTotal;
			}
			set
			{
				if ((this._ValorTotal != value))
				{
					this.OnValorTotalChanging(value);
					this.SendPropertyChanging();
					this._ValorTotal = value;
					this.SendPropertyChanged("ValorTotal");
					this.OnValorTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date")]
		public System.Nullable<System.DateTime> Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cliente", DbType="Int")]
		public System.Nullable<int> Cliente
		{
			get
			{
				return this._Cliente;
			}
			set
			{
				if ((this._Cliente != value))
				{
					this.OnClienteChanging(value);
					this.SendPropertyChanging();
					this._Cliente = value;
					this.SendPropertyChanged("Cliente");
					this.OnClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mesa_Id", DbType="Int")]
		public System.Nullable<int> Mesa_Id
		{
			get
			{
				return this._Mesa_Id;
			}
			set
			{
				if ((this._Mesa_Id != value))
				{
					if (this._Mesa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMesa_IdChanging(value);
					this.SendPropertyChanging();
					this._Mesa_Id = value;
					this.SendPropertyChanged("Mesa_Id");
					this.OnMesa_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pedido_ItemPedido", Storage="_ItemPedidos", ThisKey="Id", OtherKey="Pedido_Id")]
		internal EntitySet<ItemPedido> ItemPedidos
		{
			get
			{
				return this._ItemPedidos;
			}
			set
			{
				this._ItemPedidos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mesa_Pedido", Storage="_Mesa", ThisKey="Mesa_Id", OtherKey="Id", IsForeignKey=true)]
		internal Mesa Mesa
		{
			get
			{
				return this._Mesa.Entity;
			}
			set
			{
				Mesa previousValue = this._Mesa.Entity;
				if (((previousValue != value) 
							|| (this._Mesa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mesa.Entity = null;
						previousValue.Pedidos.Remove(this);
					}
					this._Mesa.Entity = value;
					if ((value != null))
					{
						value.Pedidos.Add(this);
						this._Mesa_Id = value.Id;
					}
					else
					{
						this._Mesa_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Mesa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemPedidos(ItemPedido entity)
		{
			this.SendPropertyChanging();
			entity.Pedido = this;
		}
		
		private void detach_ItemPedidos(ItemPedido entity)
		{
			this.SendPropertyChanging();
			entity.Pedido = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mesa")]
	public partial class Mesa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Numero;
		
		private System.Nullable<bool> _Disponivel;
		
		private System.Nullable<int> _Restaurante_Id;
		
		private EntitySet<Pedido> _Pedidos;
		
		private EntityRef<Restaurante> _Restaurante;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNumeroChanging(string value);
    partial void OnNumeroChanged();
    partial void OnDisponivelChanging(System.Nullable<bool> value);
    partial void OnDisponivelChanged();
    partial void OnRestaurante_IdChanging(System.Nullable<int> value);
    partial void OnRestaurante_IdChanged();
    #endregion
		
		public Mesa()
		{
			this._Pedidos = new EntitySet<Pedido>(new Action<Pedido>(this.attach_Pedidos), new Action<Pedido>(this.detach_Pedidos));
			this._Restaurante = default(EntityRef<Restaurante>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="VarChar(50)")]
		public string Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disponivel", DbType="Bit")]
		public System.Nullable<bool> Disponivel
		{
			get
			{
				return this._Disponivel;
			}
			set
			{
				if ((this._Disponivel != value))
				{
					this.OnDisponivelChanging(value);
					this.SendPropertyChanging();
					this._Disponivel = value;
					this.SendPropertyChanged("Disponivel");
					this.OnDisponivelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Restaurante_Id", DbType="Int")]
		public System.Nullable<int> Restaurante_Id
		{
			get
			{
				return this._Restaurante_Id;
			}
			set
			{
				if ((this._Restaurante_Id != value))
				{
					if (this._Restaurante.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRestaurante_IdChanging(value);
					this.SendPropertyChanging();
					this._Restaurante_Id = value;
					this.SendPropertyChanged("Restaurante_Id");
					this.OnRestaurante_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mesa_Pedido", Storage="_Pedidos", ThisKey="Id", OtherKey="Mesa_Id")]
		internal EntitySet<Pedido> Pedidos
		{
			get
			{
				return this._Pedidos;
			}
			set
			{
				this._Pedidos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Restaurante_Mesa", Storage="_Restaurante", ThisKey="Restaurante_Id", OtherKey="Id", IsForeignKey=true)]
		internal Restaurante Restaurante
		{
			get
			{
				return this._Restaurante.Entity;
			}
			set
			{
				Restaurante previousValue = this._Restaurante.Entity;
				if (((previousValue != value) 
							|| (this._Restaurante.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Restaurante.Entity = null;
						previousValue.Mesas.Remove(this);
					}
					this._Restaurante.Entity = value;
					if ((value != null))
					{
						value.Mesas.Add(this);
						this._Restaurante_Id = value.Id;
					}
					else
					{
						this._Restaurante_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Restaurante");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pedidos(Pedido entity)
		{
			this.SendPropertyChanging();
			entity.Mesa = this;
		}
		
		private void detach_Pedidos(Pedido entity)
		{
			this.SendPropertyChanging();
			entity.Mesa = null;
		}
	}
}
#pragma warning restore 1591
